name: Build nightly

on:
  workflow_dispatch:
    inputs:
      build_profile:
        description: 'Build profile'
        required: true
        default: 'release-fast'

permissions:
  contents: write

jobs:
  tag-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get version from Cargo.toml
        id: get_version
        run: |
          VERSION=$(grep '^version =' Cargo.toml | cut -d '"' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Delete current nightly release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=v${{ steps.get_version.outputs.VERSION }}-nightly
          RELEASE_ID=$(curl -H "Authorization: token $GITHUB_TOKEN" \
                              -H "Accept: application/vnd.github.v3+json" \
                              https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG_NAME \
                              | jq -r '.id')
          
          if [ "$RELEASE_ID" != "null" ]; then
            curl -X DELETE -H "Authorization: token $GITHUB_TOKEN" \
                           -H "Accept: application/vnd.github.v3+json" \
                           https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID
            echo "Release deleted"
          else
            echo "Release not found"
          fi

      - name: Delete nightly tag
        run: |
          git tag -d v${{ steps.get_version.outputs.VERSION }}-nightly
          git push origin :refs/tags/v${{ steps.get_version.outputs.VERSION }}-nightly

      - name: Create and push nightly tag
        run: |
          echo "Created tag: v${{ steps.get_version.outputs.VERSION }}"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -a v${{ steps.get_version.outputs.VERSION }}-nightly -m "Nightly release ${{ steps.get_version.outputs.VERSION }}"
          git push origin v${{ steps.get_version.outputs.VERSION }}-nightly 
